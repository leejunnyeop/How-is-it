plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.18'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
	targetCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
	implementation 'com.google.firebase:firebase-admin:8.0.1'

	// 전 처리 유효성 검사
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// 스프링 부트 설정
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	compileOnly 'org.projectlombok:lombok'

	// 데이터베이스
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// 메일
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// 명함인증 (적절한 Google Cloud Vision 종속성으로 대체)
	// Google Cloud Vision API를 위한 Spring Cloud GCP Vision
	implementation platform("com.google.cloud:libraries-bom:25.1.0")
	implementation 'com.google.cloud:spring-cloud-gcp-vision'
	implementation platform('com.google.cloud:spring-cloud-gcp-dependencies:2.0.4')

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}
